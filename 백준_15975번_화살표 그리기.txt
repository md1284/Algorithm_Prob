#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef unsigned long long ULL;

int n;
vector<ULL> p[100001];

ULL solve() {
	for(int i = 1; i<=n; i++)
		sort(p[i].begin(), p[i].end());
		
	ULL len = 0;
	for(int i = 1; i<=n; i++) {
		if(p[i].size() <= 1)	continue;
		
		for(int j = 0; j<p[i].size(); j++) {
			if(j == 0)	len += p[i][j+1] - p[i][j];
			else if(j == p[i].size() - 1)	len += p[i][j] - p[i][j-1];
			else {
				len += (p[i][j] - p[i][j-1] > p[i][j+1] - p[i][j] ? p[i][j+1] - p[i][j] : p[i][j] - p[i][j-1]);
			}
		}
	}
	return len;
}

int main() {
    cin >> n;
    
    for(int i = 0; i<n; i++) {
    	ULL a, b;
    	cin >> a >> b;
    	
    	p[b].push_back(a);
	}
	
	cout << solve() << endl;
	    
    return 0;
}