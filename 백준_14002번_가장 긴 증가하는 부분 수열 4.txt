#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>

using namespace std;

int N;
int a[1005], dp[1005], rc[1005];

void solve() {
    for (int i = 1; i <= N; i++)
        dp[i] = 1;

    for (int i = 1; i <= N; i++) {
        for (int j = i + 1; j <= N; j++) {
            if (a[j] > a[i] && dp[j] < dp[i] + 1) {
                dp[j] = dp[i] + 1;
                rc[j] = i;
            }
        }
    }
    int ret = 0, n = 0;
    for (int i = 1; i <= N; i++) {
        if (dp[i] > ret) {
            ret = dp[i];
            n = i;
        }
    }
    printf("%d\n", ret);
    vector<int> m;
    while (dp[n] != 1) {
        \
            m.push_back(n);
        n = rc[n];
    }
    m.push_back(n);
    for (int i = m.size() - 1; i >= 0; i--)
        printf("%d ", a[m[i]]);
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> N;
    cin >> N;

    for (int i = 1; i <= N; i++) {
        //inf >> a[i];
        cin >> a[i];
    }
    solve();

    return 0;
}