#include <iostream>
#include <string.h>

using namespace std;

int t, m, n, k;

bool map[51][51];
bool visit[51][51];
int mov[4][2] = { {1, 0}, {-1, 0}, {0, 1}, {0, -1} };

void dfs(int y, int x) {
	visit[y][x] = true;
	
	for(int i = 0; i<4; i++) {
		int dy = y + mov[i][0];
		int dx = x + mov[i][1];
	
		if(dx < 0 || m <= dx || dy < 0 || n <= dy)	continue;
		if(map[dy][dx] == 0 || visit[dy][dx] == true)	continue;
		dfs(dy, dx);
	}
}

int dfsAll() {
	int cnt = 0;
	
	for(int i = 0; i<n; i++) {
		for(int j = 0; j<m; j++) {
			if(map[i][j] == false || visit[i][j] == true)	continue;
			cnt++;
			dfs(i, j);
		}
	}
	return cnt;
}

int main() {
	cin >> t;
	
	for(int i = 0; i<t; i++) {
		cin >> m >> n >> k;
		memset(map, false, sizeof(map));
		memset(visit, false, sizeof(visit));
		
		
		for(int j = 0; j<k; j++) {
			int x, y;
			cin >> x >> y;
			map[y][x] = true;
		}
		
		cout << dfsAll() << endl;
	}
	
	return 0;
}