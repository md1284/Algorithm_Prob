#include <iostream>
#include <fstream>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int S = 1e6;
int N, M;
ll Tree[4 * S + 5];

void update(int b, int s, int e, int n, int x) {
    if (n < s || e < n)
        return;

    if (s == e) {
        Tree[b] = (ll)x;
        return;
    }

    int mid = (s + e) / 2;
    update(b * 2, s, mid, n, x);
    update(b * 2 + 1, mid + 1, e, n, x);
    Tree[b] = Tree[b * 2] + Tree[b * 2 + 1];
}

ll get(int b, int s, int e, int l, int r) {
    if (r < s || e < l)
        return 0;

    if (l <= s && e <= r)
        return Tree[b];

    int mid = (s + e) / 2;
    return get(b * 2, s, mid, l, r) + get(b * 2 + 1, mid + 1, e, l, r);
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> N >> M;
    cin >> N >> M;

    for (int a, b, c, i = 0; i < M; i++) {
        //inf >> a >> b >> c; 
        cin >> a >> b >> c;

        if (a == 0) {
            if (b > c)
                swap(b, c);
            printf("%lld\n", get(1, 1, N, b, c));
        }
        else
            update(1, 1, N, b, c);
    }

    return 0;
}