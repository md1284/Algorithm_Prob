#include <iostream>
#include <string.h>

using namespace std;

int n;
int map[501][501], cache[501][501];
int mov[4][2] = { {0, 1}, {1, 0}, {0, -1}, {-1, 0} };

int solve(int y, int x) {
	int& ret = cache[y][x];
	if(ret != -1)	return ret;
	
	ret = 1;
	for(int i = 0; i<4; i++) {
		int dy = y + mov[i][0];
		int dx = x + mov[i][1];
		
		if(dx < 0 || n <= dx || dy < 0 || n <= dy)	continue;
		if(map[y][x] >= map[dy][dx])	continue;
		
		ret = max(ret, solve(dy, dx) + 1);
	}
	return ret;
}

int main() {
	cin >> n;
	memset(cache, -1, sizeof(cache));
	
	for(int i = 0; i<n; i++) {
		for(int j = 0; j<n; j++)
			cin >> map[i][j];
	}
	
	int ret = 0;
	for(int i = 0; i<n; i++) {
		for(int j = 0; j<n; j++)
			ret = max(ret, solve(i, j));
	}
	
	cout << ret << endl;
	
	return 0;
}