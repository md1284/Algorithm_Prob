#include <stdio.h>
#include <vector>

using namespace std;

int c, h, w;
int board[21][21];
int cover[4][3][2] = {
    { {0, 0}, {1, 0}, {1, -1} },
    { {0, 0}, {1, 0}, {1, 1} },
    { {0, 0}, {1, 0}, {0, 1} },
    { {0, 0}, {0, 1}, {1, 1} }
};

bool check(int y, int x, int type, int delta) {
    int dx, dy;
    bool inspection = true;
    
    for(int i = 0; i<3; i++) {
        dx = x + cover[type][i][1];
        dy = y + cover[type][i][0];
        
        if(dx < 0 || w <= dx || dy < 0 || h <= dy)
            inspection = false;
        else if((board[dy][dx] += delta) > 1)
            inspection = false;
    }
    return inspection;
}

int solve(void) {
    int avx = -1, avy = -1;
    for(int i = 0; i<h; i++) {
        for(int j = 0; j<w; j++) {
            if(board[i][j] == 0) {
                avy = i;
                avx = j;
                break;
            }
        }
        if(avx != -1 && avy != -1)
            break;
    }
    
    if(avx == -1 && avy == -1)
        return 1;
        
    int ret = 0;
    for(int i = 0; i<4; i++) {
        if(check(avy, avx, i, 1))
            ret += solve();
        check(avy, avx, i, -1);
    }
    
    return ret;
}

void clear(void) {
    for(int i = 0; i<21; i++) {
        for(int j = 0; j<21; j++)
            board[i][j] = 0;
    }
}


int main() {
    scanf("%d", &c);
    for(int i = 0; i<c; i++) {
        scanf("%d %d", &h, &w);
        
        for(int j = 0; j<h; j++) {
            for(int k = 0; k<w; k++) {
                getchar();
                char ch;
                scanf("%c", &ch);
                
                if(ch == '#')   board[j][k] = 1;
            }
        }
        
        printf("%d\n", solve());
        clear();
    }


    return 0;
}
