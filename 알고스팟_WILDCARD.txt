#include <iostream>
#include <vector>
#include <algorithm>
#include <string.h>

using namespace std;

int c, n;
string W, S;
int cache[101][101];

bool solve(int w, int s) {
	int& ret = cache[w][s];
	if(ret != -1)	return ret;
	
	while(s < S.size() && w < W.size() && (W[w] == '?' || W[w] == S[s])) {
		s++;
		w++;
	}
	
	if(w == W.size())
		return ret = (s == S.size());

	if(W[w] == '*') {
		for(int skip = 0; skip + s <= S.size(); skip++) {
			if(solve(w+1, s+skip))
				return ret = 1;
		}
	}
	return ret = 0;
}



int main() {
	cin >> c;
	
	for(int i = 0; i<c; i++) {		
		cin >> W;
		cin >> n;
		
		vector<string> str;
		
		for(int j = 0; j<n; j++) {
			cin >> S;
			memset(cache, -1, sizeof(cache));
			
			if(solve(0, 0))	 str.push_back(S);
		}
		
		sort(str.begin(), str.end());
		
		for(int j = 0; j<str.size(); j++)
			cout << str[j] << endl;
	}
	
	return 0;
}