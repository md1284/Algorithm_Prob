#include <iostream>
#include <vector>
#include <string.h>

using namespace std;

const int MOD = 1000000000;
int n;
int cache[11][101];

int solve(int last, int n) {
	if(n == 0)	return 1;
	
	int& ret = cache[last+1][n];
	if(ret != -1)	return ret;
	
	ret = 0;
	
	if(last == -1) {
		for(int i = 1; i<10; i++) {
			ret += solve(i, n-1);
			ret %= MOD;
		}
	}
	else {
		if(last == 0) {
			ret += solve(1, n-1);
			ret %= MOD;
		}
		else if(last == 9) {
			ret += solve(8, n-1);
			ret %= MOD;
		}
		else {
			ret += solve(last-1, n-1) + solve(last+1, n-1);
			ret %= MOD;
		}
	}
	
	return ret%MOD;
}


int main() {
	cin >> n;
	memset(cache, -1, sizeof(cache));
	
	cout << solve(-1, n) << endl;
	return 0;
}