#include <iostream>

using namespace std;

const int INF = 987654321;
int n, m;
int adj[101][101];

void floyd() {
	for(int i = 0; i<n; i++)	adj[i][i] = 0;
	
	for(int k = 0; k<n; k++)
		for(int i = 0; i<n; i++)
			for(int j = 0; j<n; j++)
				adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);
}

int solve() {
	int cavin[101] = {0, };

	for(int i = 0; i<n; i++)
		for(int j = 0; j<n; j++)
			if(adj[i][j] != 1)
				adj[i][j] = INF;

	floyd();
	
	for(int i = 0; i<n; i++)
		for(int j = 0; j<n; j++)
			cavin[i] += adj[i][j];

	int mi = INF, idx = 0;
	for(int i = n-1; i>=0; i--) {
		if(mi >= cavin[i]) {
			idx = i;
			mi = cavin[i];
		}
	}
	return idx + 1;
}

int main() {
	cin >> n >> m;
	
	for(int i = 0; i<m; i++) {
		int a, b;
		cin >> a >> b;
		
		adj[a-1][b-1] = 1;
		adj[b-1][a-1] = 1;
	}
	
	cout << solve() << endl;
	
	return 0;
}