#include <iostream>
#include <vector>

using namespace std;

const int S = 50, INF = 1e8;
int N, d;
int a[S+5][S+5], b[S+5][S+5];

int solve() {
	for(int i = 1; i<=N; i++) {
		for(int j = 1; j<=N; j++) {
			if(a[i][j] == 0)
				a[i][j] = INF;
		}
		a[i][i] = 0;
	}

	for(int k = 1; k<=N; k++) {
		for(int i = 1; i<=N; i++) {
			for(int j = 1; j<=N; j++)
				a[i][j] = min(a[i][j], a[i][k]+a[k][j]);
		}
	}

	int ret = 0;
	for(int i = 1; i<=N; i++) {
		for(int j = 1; j<=N; j++)
			ret = max(ret, a[i][j]);
	}
	if(ret == INF)
		return -1;
	return ret*d;
}

int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	cin >> N >> d;

	for(int i = 1; i<=N; i++) {
		string s;
		cin >> s;

		for(int j = 1; j<=N; j++) {
			if(s[j-1] == 'Y')
				a[i][j] = 1;
		}
	}
	cout << solve() << '\n';

    return 0;
}