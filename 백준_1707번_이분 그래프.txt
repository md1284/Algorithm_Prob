#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

int k, v, e;
vector<int> adj[20001];
bool visited[20001];
int color[20001];
bool check;

void dfs(int here) {
	visited[here] = true;
	
	for(int i = 0; i<adj[here].size(); i++) {
		int there = adj[here][i];
		
		if(visited[there] == false)
			color[there] = (color[here] == 1 ? 2 : 1);
		else {
			if(color[here] == color[there])
				check = false;
			continue;
		}
		dfs(there);
	}
}

string solve() {
	check = true;
	
	for(int i = 1; i<=v; i++) {
		if(visited[i] == true)	continue;
		
		color[i] = 1;
		dfs(i);
	}
	
	
	if(check == false)
		return "NO";
	return "YES";
}

int main() {
	cin >> k;
	
	for(int i = 0; i<k; i++) {
		cin >> v >> e;
		memset(visited, false, sizeof(visited));
		memset(color, false, sizeof(color));
		for(int j = 1; j<=v; j++)
			adj[j].clear();
		
		for(int j = 0; j<e; j++) {
			int a, b;
			cin >> a >> b;
			
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		cout << solve() << endl;
	}
	
	
	return 0;
}