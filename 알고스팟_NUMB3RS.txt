#include <iostream>
#include <fstream>

using namespace std;

int c, n, d, p, t;
int vage[51][51], den[51];
double DP[101][51];

double solve(int day, int index) {
    if (day == 0 && index == p) {
        return 1;
    }
    else if (day == 0)
        return 0;
    
    double& ret = DP[day][index];
    if (ret != -1)
        return ret;

    ret = 0;
    for (int i = 0; i < n; i++) {
        if (vage[i][index] == 1)
            ret += solve(day - 1, i) / den[i];
    }
    return ret;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> c;
    cout.precision(10);
    cin >> c;

    for (int i = 0; i < c; i++) {
        //inf >> n >> d >> p;
        cin >> n >> d >> p;

        for (int j = 0; j <= d; j++) {
            for (int k = 0; k < n; k++)
                DP[j][k] = -1;
        }
        for (int j = 0; j < n; j++)
            den[j] = 0;

        for (int y = 0; y < n; y++) {
            int dt = 0;
            for (int x = 0; x < n; x++) {
                //inf >> vage[y][x];
                cin >> vage[y][x];
                vage[x][y] = vage[y][x];

                if (vage[y][x] == 1)
                    dt++;
            }
            den[y] = dt;
        }
        //inf >> t;
        cin >> t;

        for (int idx, j = 0; j < t; j++) {
            //inf >> idx;
            cin >> idx;

            cout << solve(d, idx) << " ";
        }
        printf("\n");
    }
    return 0;
}