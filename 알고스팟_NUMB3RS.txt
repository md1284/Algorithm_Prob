#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <string.h>

using namespace std;

int c, n, d, p, t;
int A[51][51];
double cache[101][51];
int deg[51];

void prev() {
	for(int i = 0; i<n; i++)	{ 
		for(int j = 0; j<n; j++) {
			if(A[j][i] == 1)
				deg[i]++;
		}
	}
}

double solve(int d, int q) {
	if(d == 0 && q == p)
		return 1;
	if(d == 0)	return 0;
	
	
	double& ret = cache[d][q];
	if(ret > -0.5)	return ret;
	
	ret = 0;
	
	int sum = 0;
	for(int i = 0; i<n; i++) {
		if(A[i][q] == 0)	continue;
		
		ret += solve(d-1, i)/deg[i];
	}
	
	return ret;
}


int main() {
	cin >> c;
	
	for(int i = 0; i<c; i++) {		
		cin >> n >> d >> p;
		memset(cache, -1, sizeof(cache));
		memset(deg, 0, sizeof(deg));
		memset(A, 0, sizeof(A));
		
		for(int j = 0; j<n; j++) {
			for(int k = 0; k<n; k++)
				cin >> A[j][k];
		}
		
		prev();
		
		cin >> t;
		for(int j = 0; j<t; j++) {
			int q;
			cin >> q;
			cout << fixed << setprecision(8) << solve(d, q) << " ";
		}
		printf("\n");
	}
	
	return 0;
}