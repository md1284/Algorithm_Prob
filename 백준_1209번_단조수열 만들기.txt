#include <iostream>
#include <algorithm>
#include <cmath>
#include <fstream>

using namespace std;

typedef long long ll;

const ll INF = 1e13;
const int S = 2000;
int N;
int a[S + 5], b[S + 5];
ll dp[S + 5][S + 5];

ll calc() {
    for (int i = 0; i <= N; i++) {
        for (int j = 0; j <= N; j++)
            dp[i][j] = INF;
    }
    for (int i = 1; i <= N; i++)
        dp[1][i] = abs(a[1] - b[i]);

    for (int i = 1; i <= N; i++) {
        for (int j = 1; j <= N; j++) {
            dp[i][j] = min(dp[i][j], dp[i - 1][j] + abs(a[i] - b[j]));
            dp[i][j] = min(dp[i][j], dp[i][j - 1]);
        }
    }
    ll ret = INF;
    for (int i = 1; i <= N; i++)
        ret = min(ret, dp[N][i]);
    return ret;
}

ll solve() {
    for (int i = 1; i <= N; i++)
        b[i] = a[i];
    sort(b + 1, b + N + 1);
    
    ll ret = calc();
    reverse(a + 1, a + N + 1);
    ret = min(ret, calc());

    return ret;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> N;
    cin >> N;

    for (int i = 1; i <= N; i++) {
        //inf >> a[i];
        cin >> a[i];
    }
    printf("%lld", solve());

    return 0;
}