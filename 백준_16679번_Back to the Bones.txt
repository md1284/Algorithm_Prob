#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <fstream>

using namespace std;

typedef long long ll;

int T, N, K;
ll DP[21][126], pw[21];
vector<pair<int,int>> a;

void prev() {
	pw[0] = 1;
	for(int i = 1; i<=20; i++)
		pw[i] = pw[i-1]*6;
		
	for(int k = 1; k<=6; k++)
		DP[1][k] = 1;
	
	for(int i = 2; i<=20; i++) {
		for(int j = i-1; j<=6*(i-1); j++) {
			for(int k = 1; k<=6; k++) {
				DP[i][j+k] += DP[i-1][j];
			}
		}
	}
}

void solve() {
	ll ret = 0;
	int S = 0, idx = 0;
	bool visited[21] = {0, };
	
	for(int i = 1; i<=N; i++)
		S += a[i].first;

	if(S >= K) {
		printf("%lld\n", pw[N]);
		for(int i = 1; i<=N; i++)
			printf("0 ");
		printf("\n");
		
		return;
	}
	
	for(int i = 1; i<=N; i++) {
		S -= a[i].first;
		
		ll cnt = 0;
		for(int j = i; j<=6*i; j++) {
			if(j+S >= K)
				cnt += DP[i][j];
		}
		
		if(ret < cnt*pw[N-i]) {
			ret = cnt*pw[N-i];
			idx = i;
		}
	}
	
	for(int pos, i = 1; i<=idx; i++) {
		pos = a[i].second;
		visited[pos] = true;
	}
	
	printf("%lld\n", ret);
	for(int i = 1; i<=N; i++) {
		printf("%d ", visited[i]);
	}
	printf("\n");
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	//fstream inf("prob.txt");
	//inf >> T;
	cin >> T;
	
	prev();
	
	for(int i = 0; i<T; i++) {
		//inf >> N >> K;
		cin >> N >> K;
		
		a.clear();
		a.push_back({0,0});
		for(int x, j = 1; j<=N; j++) {
			//inf >> x;
			cin >> x;
			a.push_back({x,j});
		}
		sort(a.begin(), a.end());
		solve();
	}
	
	return 0;
}