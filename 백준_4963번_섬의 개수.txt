#include <iostream>
#include <string.h>

using namespace std;

int w = -1, h = -1;

int map[51][51];
bool visit[51][51];
int mov[8][2] = { {1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {-1, -1}, {-1, 1}, {1, -1} };

void dfs(int y, int x) {
	visit[y][x] = true;
	
	for(int i = 0; i<8; i++) {
		int dy = y + mov[i][0];
		int dx = x + mov[i][1];
	
		if(dx < 0 || w <= dx || dy < 0 || h <= dy)	continue;
		if(map[dy][dx] == 0 || visit[dy][dx] == true)	continue;
		dfs(dy, dx);
	}
}


int dfsAll() {
	int cnt = 0;
	
	for(int i = 0; i<h; i++) {
		for(int j = 0; j<w; j++) {
			if(map[i][j] == 0 || visit[i][j] == true)	continue;
			cnt++;
			dfs(i, j);
		}
	}
	return cnt;
}

int main() {
	cin >> w >> h;
	
	while(!(w == 0 && h == 0)) {
		memset(map, 0, sizeof(map));
		memset(visit, 0, sizeof(visit));
		
		for(int i = 0; i<h; i++)
			for(int j = 0; j<w; j++)
				cin >> map[i][j];
		
		cout << dfsAll() << endl;
		
		cin >> w >> h; 
	}
	return 0;
}