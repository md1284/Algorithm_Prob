#include <iostream>
#include <algorithm>
#include <fstream>

using namespace std;

const int INF = 987654321;
int c, n;
int a[10001], DP[10010];

int calc(int index, int len) {
    len = index + len;

    int f1 = true, f21 = true, f22 = true, f3 = true, f4 = true;

    for (int i = index; i < len; i++) {
        if (i != index && a[i] != a[i-1])
            f1 = false;

        if (i != index && a[i] != a[i - 1] + 1)
            f21 = false;

        if (i != index && a[i] != a[i - 1] - 1)
            f22 = false;

        if (i % 2 == index % 2 && a[i] != a[index])
            f3 = false;
        if (i % 2 != index % 2 && a[i] != a[index + 1])
            f3 = false;

        if (i != index && (a[index + 1] - a[index] != a[i] - a[i - 1]))
            f4 = false;

    }

    if (f1)
        return 1;
    if (f21 || f22)
        return 2;
    if (f3)
        return 4;
    if (f4)
        return 5;

    return 10;
}

int solve() {
    for (int i = 0; i <= n; i++)
        DP[i] = INF;
    DP[0] = 0;

    for (int i = 0; i <= n-3; i++) {
        if(i+3 <= n)
            DP[i + 3] = min(DP[i + 3], DP[i] + calc(i + 1, 3));
        if(i+4 <= n)
            DP[i + 4] = min(DP[i + 4], DP[i] + calc(i + 1, 4));
        if(i+5 <= n)
            DP[i + 5] = min(DP[i + 5], DP[i] + calc(i + 1, 5));
    }

    return DP[n];
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> c;
    cin >> c;

    for (int i = 0; i < c; i++) {
        string s;
        //inf >> s;
        cin >> s;

        n = s.size();
        for (int j = 0; j < n; j++)
            a[j+1] = s[j] - '0';

        printf("%d\n", solve());
    }

    return 0;
}