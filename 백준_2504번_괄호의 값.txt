#include <iostream>
#include <stack>

using namespace std;


// [), (]
int solve(stack<char> st) {
	stack<char> at, ct;
	stack<char> bt(st);
	int ret = 0;
	
	while(!st.empty()) {
		if(st.top() == ')')	at.push(')');
		else if(st.top() == ']')	at.push(']');
		else if(st.top() == '(') {
			if(at.empty() || at.top() == ']')	return 0;
			at.pop();
		}
		else if(st.top() == '[') {
			if(at.empty() || at.top() == ')')	return 0;
			at.pop();
		}
		st.pop();
	}
	if(!at.empty())	return 0;
	
	while(!bt.empty()) {
		if(bt.top() == ')')	ct.push(')');
		else if(bt.top() == ']')	ct.push(']');
		else if(bt.top() == '(') {
			if(ct.top() == ')') {
				ct.pop();
				ct.push('2');
			}
			else {
				int a = ct.top() - '0';
				ct.pop();
				ct.pop();
				ct.push(char(a*2+'0'));
			}
		}
		else if(bt.top() == '[') {
			if(ct.top() == ']') {
				ct.pop();
				ct.push('3');
			}
			else {
				int a = ct.top() - '0';
				ct.pop();
				ct.pop();
				ct.push(char(a*3+'0'));
			}
		}
		
		if(ct.top() != ')' && ct.top() != ']') {
			int a = ct.top() - '0';
			ct.pop();
			
			if(!ct.empty() && ct.top() != ')' && ct.top() != ']') {
				int b = ct.top() - '0';
				ct.pop();
				ct.push(char(a+b+'0'));
			}
			else
				ct.push(char(a+'0'));
		}
		
		bt.pop();
	}	
	
	while(!ct.empty()) {
		ret += ct.top() - '0';
		ct.pop();
	}
	
	return ret;
}

int main() {
	stack<char> st;
	string s;
	cin >> s;
	
	for(int i = 0; i<s.size(); i++)
		st.push(s[i]);
		
	cout << solve(st) << endl;	
	
	return 0;
}