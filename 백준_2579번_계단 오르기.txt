#include <iostream>
#include <vector>
#include <string.h>

using namespace std;

const int NINF = -987654321;
int n;
vector<int> score;
int cache[10002][3];

int solve(int index, int conti) {
	if(index == n-1) return score[n-1];
	if(index >= n)	return NINF;
	
	
	int& ret = cache[index+1][conti];
	if(ret != -1)	return ret;
	
	if(index == -1)
		ret = max(solve(index+1, 1), solve(index+2, 1));
	else if(conti < 2)
		ret = max(score[index] + solve(index+1, conti+1), score[index] + solve(index+2, 1));
	else
		ret = score[index] + solve(index+2, 1);
		
	return ret;
}


int main() {
	cin >> n;
	memset(cache, -1, sizeof(cache));
	
	for(int i = 0; i<n; i++) {
		int a;
		cin >> a;
		score.push_back(a);
	}

	cout << solve(-1, 0) << endl;
	
	return 0;
}