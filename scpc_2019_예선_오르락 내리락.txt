#include <iostream>
#include <algorithm>
#include <fstream>

using namespace std;

typedef long long ll;

const int S = 1e6;
ll INF = 1e12;
int T, N1, N2;
ll DP[S + 5], psum[S + 5];

void solve() {
    for (int i = 0; i <= S; i++)
        DP[i] = INF;
    DP[1] = 0;

    for (int i = 1; i <= S; i++) {
        if (i * 2 <= S) {
            DP[i * 2] = min(DP[i * 2], DP[i] + 1);
            DP[i * 2 - 1] = min(DP[i * 2 - 1], DP[i * 2] + 1);
        }
    }

    for (int i = 1; i <= S; i++)
        psum[i] = psum[i - 1] + DP[i];
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> T;
    cin >> T;

    solve();
    for (int i = 1; i <= T; i++) {
        //inf >> N1 >> N2;
        cin >> N1 >> N2;

        printf("Case #%d\n", i);
        printf("%lld\n", psum[N2] - psum[N1 - 1]);
    }

    return 0;
}