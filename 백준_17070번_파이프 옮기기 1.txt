#include <iostream>
#include <fstream>

using namespace std;

int N;
int bd[20][20], dp[20][20][3];

int solve(int y, int x, int dir) {
    if (y == N && x == N)
        return 1;

    int& ret = dp[y][x][dir];
    if (ret != -1)
        return ret;

    ret = 0;
    if (dir == 0) {
        if(x + 1 <= N && bd[y][x + 1] == 0)
            ret += solve(y, x + 1, 0);
        if (y + 1 <= N && x + 1 <= N && bd[y][x + 1] == 0 && bd[y + 1][x] == 0 && bd[y + 1][x + 1] == 0)
            ret += solve(y + 1, x + 1, 2);
    }
    else if (dir == 1) {
        if (y + 1 <= N && bd[y + 1][x] == 0)
            ret += solve(y + 1, x, 1);
        if (y + 1 <= N && x + 1 <= N && bd[y][x + 1] == 0 && bd[y + 1][x] == 0 && bd[y + 1][x + 1] == 0)
            ret += solve(y + 1, x + 1, 2);
    }
    else {
        if (x + 1 <= N && bd[y][x + 1] == 0)
            ret += solve(y, x + 1, 0);
        if (y + 1 <= N && bd[y + 1][x] == 0)
            ret += solve(y + 1, x, 1);
        if (y + 1 <= N && x + 1 <= N && bd[y][x + 1] == 0 && bd[y + 1][x] == 0 && bd[y + 1][x + 1] == 0)
            ret += solve(y + 1, x + 1, 2);
    }
    return ret;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> N;
    cin >> N;

    for (int i = 1; i <= N; i++) {
        for (int j = 1; j <= N; j++) {
            //inf >> bd[i][j];
            cin >> bd[i][j];

            for (int k = 0; k < 3; k++)
                dp[i][j][k] = -1;
        }
    }
    printf("%d", solve(1, 2, 0));

    return 0;
}