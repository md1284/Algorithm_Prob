#include <stdio.h>
#include <vector>
#include <string.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>

using namespace std;

char s1[1520], s2[1520];
int ap[26], pr[3] = { 8191, 131071, 524287}, ins[3], n = 2;
int len1, len2, mlen;
vector<pair<int, int>> G[1520][1520];

bool isPrime(int n) {
	for (int i = 2; i*i <= n; i++) {
		if (n%i == 0)
			return 0;
	}
	return 1;
}

int main(void) {
	scanf("%s %s", s1, s2);
	len1 = strlen(s1);
	len2 = strlen(s2);

	for (int i = 0; i < 26; n++) {
		if (isPrime(n))
			ap[i++] = n;
	}

	for (int i = 0; i < len1; i++) {
		ins[0] = 1, ins[1] = 1, ins[2] = 1;
		for (int j = i; j < len1; j++) {
			ins[0] *= ap[s1[j] - 'a'];
			ins[0] %= pr[0];
			ins[1] *= ap[s1[j] - 'a'];
			ins[1] %= pr[1];
			ins[2] *= ap[s1[j] - 'a'];
			ins[2] %= pr[2];

			G[j - i + 1][ins[0]].push_back({ ins[1], ins[2] });
		}
	}

	for (int i = 0; i < len2; i++) {
		ins[0] = 1, ins[1] = 1, ins[2] = 1;
		for (int j = i; j < len2; j++) {
			ins[0] *= ap[s2[j] - 'a'];
			ins[0] %= pr[0];
			ins[1] *= ap[s2[j] - 'a'];
			ins[1] %= pr[1];
			ins[2] *= ap[s2[j] - 'a'];
			ins[2] %= pr[2];

			for (int k = 0; k < G[j - i + 1][ins[0]].size(); k++) {
				if (G[j - i + 1][ins[0]][k] == make_pair(ins[1], ins[2])) {
					if (j - i + 1 > mlen)
						mlen = j - i + 1;
				}
			}
		}
	}
	printf("%d", mlen);
	
	system("pause");
	return 0;
}