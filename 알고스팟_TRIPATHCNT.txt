#include <iostream>
#include <vector>
#include <algorithm>
#include <string.h>

using namespace std;

int c, n;
int tri[101][101];
int cache[101][101];
int cntcache[101][101];

int solve(int y, int x) {
	if(y == n-1)	return tri[y][x];
	
	int& ret = cache[y][x];
	if(ret != -1)	return ret;
	
	return ret = tri[y][x] + max(solve(y+1, x), solve(y+1, x+1));
}

int count(int y, int x) {
	if(y == n-1)	return 1;
	
	int& ret = cntcache[y][x];
	if(ret != -1)	return ret;
	
	ret = 0;
	if(solve(y, x) == solve(y+1, x) + tri[y][x])	ret += count(y+1, x);
	if(solve(y, x) == solve(y+1, x+1) + tri[y][x])	ret += count(y+1, x+1);
	
	return ret;
}

int main() {
	cin >> c;
	
	for(int i = 0; i<c; i++) {		
		cin >> n;
		memset(cache, -1, sizeof(cache));
		memset(cntcache, -1, sizeof(cntcache));
		memset(tri, 0, sizeof(tri));
		
		for(int j = 0; j<n; j++) {
			for(int k = 0; k<=j; k++) {
				cin >> tri[j][k];
			}
		}
		
		int sum = solve(0, 0);
		cout << count(0, 0) << endl;
	}
	
	return 0;
}