#include <iostream>
#include <fstream>

using namespace std;

int N, ret;
bool visited[51][51];
int mv[6][2][2] = {
    {{1,1}, {-1,1}},    // 0
    {{-1,-1}, {1,-1}},  // 1
    {{0,1}, {1,-1}},    // 2
    {{0,-1}, {-1,1}},   // 3
    {{0,1}, {-1,-1}},   // 4
    {{0,-1}, {1,1}}     // 5
};


void solve(int y, int x, int n, int d) {
    //printf("d: %d, y: %d, x: %d, n: %d\n",d, y, x, n);
    if (visited[y][x] == true && n == 0) {
        ret++;
        return;
    }
    else if (visited[y][x] == true || n == 0)
        return;

    visited[y][x] = true;

    for (int type = 0; type < 2; type++) {
        int ny = y + mv[d][type][1];
        int nx = x + mv[d][type][0];
        int dir;

        if (d == 0) {
            if (type == 0)
                dir = 2;
            else
                dir = 4;
        }
        else if (d == 1) {
            if (type == 0)
                dir = 3;
            else
                dir = 5;
        }
        else if (d == 2) {
            if (type == 0)
                dir = 0;
            else
                dir = 5;
        }
        else if (d == 3) {
            if (type == 0)
                dir = 1;
            else
                dir = 4;
;        }
        else if (d == 4) {
            if (type == 0)
                dir = 0;
            else
                dir = 3;
        }
        else {
            if (type == 0)
                dir = 1;
            else
                dir = 2;
        }
        solve(ny, nx, n - 1, dir);
    }
    visited[y][x] = false;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> N;
    cin >> N;

    visited[25][25] = true;
    solve(26, 25, N, 0);
    printf("%d", ret);

    return 0;
}