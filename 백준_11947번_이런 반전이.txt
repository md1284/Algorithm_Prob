#include <iostream>
#include <stack>
#include <fstream>

using namespace std;

typedef long long ll;
int T, N;

int cipher(int n) {
	int ret = 0;
	while(n > 0) {
		ret++;
		n /= 10;
	}
	return ret;
}

int dpow(int a) {
	int ret = 1;
	for(int i = 1; i<a; i++)
		ret *= 10;
	return ret;
}

ll rev(int n) {
	stack<int> st;
	int t;
	ll ret = 0;
	
	while(n > 0) {
		st.push(n%10);
		n /= 10;
	}
	
	while(!st.empty()) {
		t = st.top();
		st.pop();
		
		ret += (ll)(9-t);
		ret *= 10;
	}
	return ret/10;
}

ll solve(int n) {
	ll ret;
	int cp = cipher(n);
	ll th = (ll)5*dpow(cp)-1;
	
	if(th <= n)
		ret = th * (th+1);
	else
		ret = (ll)n * rev(n);
	
	return ret;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	//fstream inf("prob.txt");
	//inf >> T;
	cin >> T;
	
	for(int i = 0; i<T; i++) {
		//inf >> N;
		cin >> N;
		
		printf("%lld\n", solve(N));
	}
	
	return 0;
}