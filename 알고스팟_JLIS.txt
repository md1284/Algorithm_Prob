#include <iostream>
#include <algorithm>
#include <climits>
#include <fstream>

using namespace std;

typedef long long ll;

const ll INF = LLONG_MAX;
int c, n, m;
ll a[101], b[101], DP[101][101];

ll solve() {
    ll ret = 0;
    a[0] = b[0] = -INF;

    for (int i = 0; i <= n; i++) {
        for(int j = 0; j<=m; j++)
            DP[i][j] = 0;
    }

    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= m; j++) {
            for (int k = i+1; k <= n; k++) {
                if (max(a[i], b[j]) < a[k]) {
                    DP[k][j] = max(DP[k][j], DP[i][j] + 1);
                    ret = max(ret, DP[k][j]);
                    //printf("1. ij: %d %d, update DP[%d][%d]: %d\n", i, j, k, j, DP[k][j]);
                }
            }
            for (int k = j+1; k <= m; k++) {
                if (max(a[i], b[j]) < b[k]) {
                    DP[i][k] = max(DP[i][k], DP[i][j] + 1);
                    ret = max(ret, DP[i][k]);
                    //printf("2. ij: %d %d, update DP[%d][%d]: %d\n", i, j, i, k, DP[i][k]);
                }
            }
        }
    }
    return ret;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> c;
    cin >> c;

    for (int i = 0; i < c; i++) {
        //inf >> n >> m;
        cin >> n >> m;

        for (int j = 1; j <= n; j++) {
            //inf >> a[j];
            cin >> a[j];
        }
        for (int j = 1; j <= m; j++) {
            //inf >> b[j];
            cin >> b[j];
        }

        //printf("%d\n", solve());
        cout << solve() << endl;
    }

    return 0;
}