#include <iostream>
#include <string.h>

using namespace std;

int n;
int A[1001];
int liscache[1001], rliscache[1001];

int lis(int index) {
	if(index == -1)	return 0;
	
	int& ret = liscache[index+1];
	if(ret != -1)	return ret;
	
	ret = 1;
	for(int next = index-1; next>=0; next--) {
		if(index == n || A[index] > A[next])
			ret = max(ret, lis(next) + 1);
	}
	return ret;
}

int rlis(int index) {
	if(index == n)	return 0;
	
	int& ret = rliscache[index+1];
	if(ret != -1)	return ret;
	
	ret = 1;
	for(int next = index+1; next<n; next++) {
		if(index == -1 || A[index] > A[next])
			ret = max(ret, rlis(next) + 1);
	}
	return ret;
}

int solve() {
	int l = lis(n), r = rlis(-1);
	int ret = 0;
	for(int k = 0; k<n; k++)
		ret = max(ret, lis(k) + rlis(k) - 1);

	return ret;
}


int main() {
	cin >> n;
	memset(liscache, -1, sizeof(liscache));
	memset(rliscache, -1, sizeof(rliscache));
	
	for(int i = 0; i<n; i++)
		cin >> A[i];
	
	cout << solve() << endl;
	
	return 0;
}