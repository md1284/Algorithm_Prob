#include <iostream>
#include <algorithm>
 
using namespace std;

typedef long long ll;

const int S = 2e5;
int T, N;
ll d[S+5];

bool solve() {
    sort(d+1, d+2*N+1);
    
    for(int i = 1; i<=2*N-1; i+=2) {
        if(d[i] != d[i+1])
            return false;
        if(d[i] % 2 != 0)
            return false;
    }

    ll dp[S+5];
    for(int i = 1, j = 1; i<=2*N; i+=2, j++)
        dp[j] = d[i];
    
    for(int i = 1; i<=N-1; i++) {
        if((dp[i+1] - dp[i]) % (2*N - 2*(N-i)) != 0)
            return false;
    }

    if(dp[N] % (2*N) != 0)
        return false;
    
    ll a[S+5];
    a[1] = dp[N] / (2*N);

    for(int i = 2; i<=N; i++) {
        ll v = (2*N - 2*(i-1))*a[i-1] - (dp[N-i+2] - dp[N-i+1]);
        v /= (2*N - 2*(i-1));
    
        if(v <= 0)
            return false;
        a[i] = v;
    }
    for(int i = 1; i<=N-1; i++) {
        if(a[i] <= a[i+1])
            return false;
    }

    return true;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    cin >> T;
 
    for(int i = 0; i<T; i++) {
        cin >> N;

        for(int j = 1; j<=2*N; j++)
            cin >> d[j];
        
        if(solve() == true)
            cout << "YES" << '\n';
        else
            cout << "NO" << '\n';
    }
 
    return 0;
}