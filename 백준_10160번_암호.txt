#include <iostream>
#include <cstring>

using namespace std;

typedef long long ULL;

const ULL mod = 1000000009;
int n, k;
ULL cache[1000001];

ULL power(ULL a, int b) {
	ULL ret = 1;
	for(; b>0; b >>= 1, a = (ULL)a * a % mod) {
		if(b & 1)
			ret = (ULL)ret * a % mod;
	}
	return ret;
}

ULL solve(int i) {
	if(i == 0)	return 1;
	else if(0 < i && i < 5)	return power((ULL)k, i);
	else if(i == 5)	return power((ULL)k, i) - 2;
	
	ULL& ret = cache[i];
	if(ret != -1)	return ret;
	
	if(i == 6)	return ret = (solve(i-1) * k - 2 * k) % mod;
	
	ret = solve(i-1) * k - solve(i-5) * (ULL)2 + solve(i-7);
	ret %= mod;
	if(ret < 0)	ret += mod;
	return ret;
}

int main() {
	scanf("%d %d", &n, &k);
    
	memset(cache, -1, sizeof(cache));
	ULL ret = solve(n);
	if(ret < 0)	ret += mod;
	printf("%lld", ret);

	return 0;
}