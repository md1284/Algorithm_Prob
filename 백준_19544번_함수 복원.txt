#include <iostream>
#include <vector>
#include <fstream>

using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;
int N;
int bd[501][501], sum[501];
ll fac[501];
vector<int> p;

void prev() {
    fac[0] = 1;
    for (int i = 1; i <= N; i++) {
        fac[i] = fac[i - 1] * i % mod;
        fac[i] %= mod;
    }
}

ll solve() {
    for (int i = 1; i <= N; i++) {
        for (int j = 1; j <= N; j++)
            sum[i] += bd[i][j];
    }

    for (int i = 1; i <= N; i++) {
        if (bd[i][0] != 0)
            continue;

        int cnt = 0;
        for (int j = 1; j <= N; j++) {
            if (bd[i][j] == 0)
                continue;
            if (bd[j][i] == 1)
                cnt++;
        }
        if (cnt != 1 && cnt == sum[i]) {
            bd[i][0] = 1;
            for (int j = 1; j <= N; j++) {
                if (bd[i][j] == 0)
                    continue;
                bd[j][0] = 1;
            }
            p.push_back(cnt);
        }
    }

    ll ret = 1;
    for (int i = 1; i <= N; i++) {
        if (bd[i][0] == 1)
            continue;

        bool check = true;
        for (int j = 1; j <= N; j++) {
            if (bd[i][j] == 0)
                continue;
            if (i == j || bd[j][0] == 1)
                continue;

            check = false;
        }
        if (check == false)
            continue;

        for (int j = 1; j <= N; j++) {
            if (bd[i][j] == 0 || i == j)
                continue;

            ret = ret * sum[j] % mod;
            ret %= mod;
            break;
        }
    }

    for (int i = 0; i < p.size(); i++) {
        ret = ret * fac[p[i] - 1] % mod;
        ret %= mod;
    }
    return ret;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> N;
    cin >> N;

    prev();
    for (int i = 1; i <= N; i++) {
        for (int j = 1; j <= N; j++) {
            //inf >> bd[i][j];
            cin >> bd[i][j];
        }
    }
    printf("%lld", solve());

    return 0;
}