#include <iostream>
#include <vector>
#include <windows.h>

using namespace std;

typedef struct _edge
{
	int v, c;
} edge;

vector<edge> G[10001];
int visit[10001];
int maxi = 0;
int sum = 0;
int indx = 0;

void DFS(int first)
{
	if (visit[first] == 0)
	{
		if (maxi < sum)
		{
			indx = first;
			maxi = sum;
		}
	}

	visit[first] = 1;
		
	for (int i = 0; i < G[first].size(); i++)
	{
		if (visit[G[first][i].v] == 0)
		{
			sum += G[first][i].c;
			DFS(G[first][i].v);
			sum -= G[first][i].c;
		}
	}
}

int main(void)
{
	int n;
	scanf("%d", &n);

	for (int i = 1; i < n; i++)
	{
		int idx, a, b;
		scanf("%d %d %d", &idx, &a, &b);

		edge temp;
		temp.v = a;
		temp.c = b;
		G[idx].push_back(temp);
		temp.v = idx;
		G[a].push_back(temp);
	}

	DFS(1);
	sum = 0;
	maxi = 0;

	for (int i = 1; i <= n; i++)
		visit[i] = 0;

	DFS(indx);
	printf("%d", maxi);
	
	system("pause");
	return 0;
}