#include <iostream>
#include <vector>
#include <queue>
#include <fstream>

using namespace std;

const int S = 1e5, INF = 987654321;
int N, M;
bool selected[S+5];
vector<pair<int, int>> adj[S+5];

int prim() {
	int ret = 0, mcost = -1;
	priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
	pq.push({0,1});
	
	for(int i = 1; i<=N; i++) {
		int here, cost = INF;
		
		while(!pq.empty()) {
			here = pq.top().second;
			
			if(selected[here] == false) {
				cost = pq.top().first;				
				break;
			}
			pq.pop();
		}
		if(cost == INF)	return INF;
		
		ret += cost;
		selected[here] = true;
		mcost = max(mcost, cost);
		
		for(int j = 0; j<adj[here].size(); j++)
			pq.push(adj[here][j]);
	}
	return ret-mcost;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	//fstream inf("prob.txt");
	//inf >> N >> M;
	cin >> N >> M;
	
	for(int a,b,c,i = 0; i<M; i++) {
		//inf >> a >> b >> c;
		cin >> a >> b >> c;
		
		adj[a].push_back({c,b});
		adj[b].push_back({c,a});
	}
	
	printf("%d", prim());

	return 0;
}