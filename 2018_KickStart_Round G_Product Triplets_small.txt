#include <iostream>
#include <fstream>
#include <string.h>
#include <vector>
#include <math.h>
#include <algorithm>

using namespace std;

const int MAX = 200005;
vector<int> arr;
int c, n;
int sum[200005];

void countadd(int n) {
	if(n < MAX)
		sum[n]++;
	
	return;
}

int recount(int n) {
	if(n < MAX)
		return sum[n];
	
	return 0;
}


int solve(void) {
	int cnt = 0;
	
	for(int i = n-1; i>=0; i--) {
		for(int j = 0; j<i; j++) {
			if(arr[i] == 0 || arr[j] == 0)	continue;
			if(arr[i] == 1 && arr[j])
				cnt += recount(1);
			else if(arr[i] == 1 || arr[j] == 1)
				cnt += recount(arr[i] * arr[j]);
			else {
				cnt += recount(arr[i] * arr[j]);
				
				if(arr[i] != arr[j]) {
					if(arr[i]%arr[j] == 0)
						cnt += recount(arr[i] / arr[j]);
				}
				if(arr[j]%arr[i] == 0)
					cnt += recount(arr[j] / arr[i]);
			}
		}
		countadd(arr[i]);
		cout << cnt << endl;
	}
	cnt += sum[0] * (sum[0]-1) * (sum[0]-2) / 6 + sum[0] * (sum[0]-1) / 2 * (n-sum[0]);
	 
	return cnt;
}



int main() {
    ifstream inf("A-small-practice.in");
    ofstream outf("output.txt");
	
	//cin >> c;
	inf >> c;
	
    for(int i = 0; i<c; i++) {
    	//cin >> n;
    	inf >> n;
    	
    	for(int j = 0; j<n; j++) {
    		int a;
    		//cin >> a;
    		inf >> a;
			arr.push_back(a);
		}
		
		memset(sum, 0, sizeof(sum));
    	
		cout << i+1 << "done " << endl;
		//cout << "Case #" << i+1 << ": " << solve() << endl;
		outf << "Case #" << i+1 << ": " << solve() << endl;
		
		arr.clear();
	}
    
    inf.close();
    outf.close();
    return 0;
}


/* // small
#include <iostream>
#include <fstream>
#include <vector>
#include <math.h>
#include <algorithm>

using namespace std;

typedef unsigned long long ULL;

vector<int> arr;
int c, n;

ULL solve(void) {
	ULL cnt = 0;
	
	for(int i = 0; i<n-2; i++) {
		for(int j = i+1; j<n-1; j++) {
			for(int k = j+1; k<n; k++) {
				
				
				if((ULL)arr[i] == (ULL)arr[j]*arr[k] || (ULL)arr[j] == (ULL)arr[i]*arr[k] || (ULL)arr[k] == (ULL)arr[i]*arr[j])
					cnt++;
					
			}
		}
	}
	return cnt;
}



int main() {
    ifstream inf("A-small-practice.in");
    ofstream outf("output.txt");
	
	//cin >> c;
	inf >> c;
	
    for(int i = 0; i<c; i++) {
    	//cin >> n;
    	inf >> n;
    	
    	for(int j = 0; j<n; j++) {
    		int a;
    		//cin >> a;
    		inf >> a;
			arr.push_back(a);
		}
    	
		cout << i+1 << "done " << endl;
		//cout << "Case #" << i+1 << ": " << solve() << endl;
		outf << "Case #" << i+1 << ": " << solve() << endl;
		
		arr.clear();
	}
    
    inf.close();
    outf.close();
    return 0;
}

*/
