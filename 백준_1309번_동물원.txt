#include <iostream>
#include <string.h>

using namespace std;

const int mod = 9901;
int n;
int cache[100001][3];

int solve(int index, int last) {
	if(index == n-1)	return 1;
	if(index > n)	return 0;
	
	if(index == -1) {
		int ret = solve(index+1, 0);
		ret %= mod;
		ret += solve(index+1, 1);
		ret %= mod;
		ret += solve(index+1, 2);
		ret %= mod;
		return ret;
	}
	
	int& ret = cache[index][last];
	if(ret != -1)	return ret;
	
	ret = 0;
	if(last == 2) {
		ret += solve(index+1, 0);
		ret %= mod;
		ret += solve(index+1, 1);
		ret %= mod;
		ret += solve(index+1, 2);
		ret %= mod;
	}
	else if(last == 1) {
		ret += solve(index+1, 0);
		ret %= mod;
		ret += solve(index+1, 2);
		ret %= mod;
	}
	else if(last == 0) {
		ret += solve(index+1, 1);
		ret %= mod;
		ret += solve(index+1, 2);
		ret %= mod;
	}
	return ret;
}

int main() {
	cin >> n;
	memset(cache, -1, sizeof(cache));
	
	cout << solve(-1, 0) << endl;
	
	return 0;
}