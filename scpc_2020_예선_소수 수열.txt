#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>

using namespace std;

const int S = 3e4;
int T, a, b;
int era[S + 5];

int vec2num(const vector<int>& x) {
    int n = 0;
    for (int i = x.size() - 1; i >= 0; i--) {
        n += x[i];
        n *= 10;
    }
    return n / 10;
}

void update(int n) {
    vector<int> x, y[6];
    int c = n, p = 1;

    while (c > 0) {
        x.push_back(c % 10);
        c /= 10;
        p++;
    }

    for (int i = 0; i < p; i++) {
        for (int j = 0; j <= x.size(); j++) {
            if (i == j)
                y[i].push_back(0);
            if(j < x.size())
                y[i].push_back(x[j]);
        }
    }
    for (int i = 0; i < p; i++) {
        for (int j = 1; j < 10; j++) {
            y[i][i] = j;
            int val = vec2num(y[i]);
            
            if (val > S)
                continue;
            if (era[val] > 0)
                era[val] = max(era[val], era[n] + 1);
        }
    }
}

void prev() {
    for (int i = 0; i <= S; i++)
        era[i] = 1;
    era[0] = era[1] = 0;

    for (int i = 2; i <= S; i++) {
        for (int j = i; j <= S; j += i) {
            if (era[j] == false)
                continue;
            if (i == j)
                continue;
            era[j] = false;
        }
    }

    for (int i = 2; i <= S; i++) {
        if (era[i] > 0)
            update(i);
    }
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> T;
    cin >> T;

    prev();
    for (int i = 1; i <= T; i++) {
        //inf >> a >> b;
        cin >> a >> b;

        printf("Case #%d\n", i);
        if (era[a] > era[b])
            printf("1\n");
        else if (era[a] < era[b])
            printf("2\n");
        else
            printf("3\n");
    }
    
    return 0;
}