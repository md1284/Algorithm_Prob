#include <iostream>
#include <vector>
#include <algorithm>
#include <string.h>

using namespace std;

const int MOD = 1000000007;
int c, n;
int cache[101];

int solve(int index) {
	if(index <= 1)	return 1;
	
	int& ret = cache[index];
	if(ret != -1)	return ret;
	
	return ret = (solve(index-1) + solve(index-2))%MOD;
}


int main() {
	cin >> c;
	
	for(int i = 0; i<c; i++) {		
		cin >> n;
		memset(cache, -1, sizeof(cache));

		if(n%2 == 0) {
			int ret = solve(n) - solve(n/2);
			if(ret < 0)	ret += MOD;
			ret -= solve(n/2 - 1);
			if(ret < 0)	ret += MOD;
			cout << ret << endl;
		}
		else {
			int ret = solve(n) - solve(n/2);
			if(ret < 0)	ret += MOD;
			cout << ret << endl;
		}
	}
	
	return 0;
}