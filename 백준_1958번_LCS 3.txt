#include <iostream>
#include <algorithm>
#include <fstream>

using namespace std;

string a, b, c;
int dp[105][105][105];

int solve() {
    int aa = a.size(), bb = b.size(), cc = c.size();

    for (int i = 1; i <= aa; i++) {
        for (int j = 1; j <= bb; j++) {
            for (int k = 1; k <= cc; k++) {
                if (a[i - 1] == b[j - 1] && b[j - 1] == c[k - 1])
                    dp[i][j][k] = max(dp[i][j][k], dp[i - 1][j - 1][k - 1] + 1);
                else {
                    dp[i][j][k] = max(dp[i - 1][j][k], dp[i][j - 1][k]);
                    dp[i][j][k] = max(dp[i][j][k], dp[i][j][k - 1]);
                }
            }
        }
    }
    return dp[aa][bb][cc];
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> a >> b >> c;
    cin >> a >> b >> c;

    printf("%d", solve());
    
    return 0;
}