#include <iostream>
 
using namespace std;
 
typedef long long ll;
 
const int S = 5000, mod = 1e9+7;
int N, K, Q;
int a[S+5];
ll dp[S+5][S+5], dc[S+5][S+5], dt[S+5];
 
void init() {
    for(int i = 1; i<=N; i++)
        dp[i][0] = 1;
 
    for(int k = 1; k<=K; k++) {
        for(int i = 1; i<=N; i++) {
            if(i == 1)
                dp[i][k] = dp[i+1][k-1];
            else if(i == N)
                dp[i][k] = dp[i-1][k-1];
            else
                dp[i][k] = (dp[i-1][k-1] + dp[i+1][k-1]) % mod;
 
            dp[i][k] %= mod;
        }
    }
 
    for(int i = 1; i<=N; i++) {
        for(int j = 0; j<=K; j++)
            dc[i][j] = dp[i][j] * dp[i][K-j] % mod;
    }
 
    for(int i = 1; i<=N; i++) {
        for(int k = 0; k<=K; k++) {
            dt[i] += dc[i][k];
            dt[i] %= mod;
        }
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    cin >> N >> K >> Q;
 
    init();
    for(int i = 1; i<=N; i++)
        cin >> a[i];
 
    ll ret = 0;
    for(int j = 1; j<=N; j++) {
        ret += a[j] * dt[j] % mod;
        ret %= mod;
    }
    
    for(int i = 0; i<Q; i++) {
        int p, x;
        cin >> p >> x;
 
        ret -= a[p] * dt[p] % mod;
        if(ret < 0)
            ret += mod;
        
        a[p] = x;
        ret += a[p] * dt[p] % mod;
        ret %= mod;
 
        cout << ret << '\n';
    }
 
    return 0;
}