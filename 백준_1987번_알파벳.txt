#include <iostream>

using namespace std;

int r, c;
char board[21][21];
bool visited[26];
int mov[4][2] = {
{1, 0}, {0, 1}, {-1, 0}, {0, -1}
};
int ret;

void dfs(int y, int x, int depth) {
	ret = max(ret, depth);
	
	for(int type = 0; type < 4; type++) {
		int dy = y + mov[type][0];
		int dx = x + mov[type][1];
		
		if(dy < 0 || r <= dy || dx < 0 || c <= dx)	continue;
		if(visited[board[dy][dx] - 'A'] == true)	continue;
		
		visited[board[dy][dx] - 'A'] = true;
		dfs(dy, dx, depth+1);
		visited[board[dy][dx] - 'A'] = false;
	}
}


int main() {
	cin >> r >> c;
	
	for(int i = 0; i<r; i++) {
		for(int j = 0; j<c; j++)
			cin >> board[i][j];	
	}

	visited[board[0][0] - 'A'] = true;
	dfs(0, 0, 1);
	cout << ret << endl;
	
	return 0;
}