#include <iostream>
#include <vector>
#include <cstring>
#include <fstream>

using namespace std;

int c, n, m;
vector<int> f[11];
bool visited[11];

int solve(int cur) {
    int ret = 0;
    visited[cur] = true;
    bool np = true;

    for (int i = 0; i < f[cur].size(); i++) {
        int pr = f[cur][i];

        if (visited[pr] == true)
            continue;

        np = false;
        visited[pr] = true;

        bool done = true;
        for (int i = 0; i < n; i++) {
            if (visited[i] == false)
                done = false;
        }
        if (done == true) {
            visited[cur] = false;
            visited[pr] = false;
            return 1;
        }

        int next;
        for (int j = 0; j < n; j++) {
            if (visited[j] == false) {
                next = j;
                break;
            }
        }

        ret += solve(next);
        visited[pr] = false;
    }
    visited[cur] = false;

    if (np == true)
        return 0;

    return ret;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> c;
    cin >> c;

    for (int i = 0; i < c; i++) {
        //inf >> n >> m;
        cin >> n >> m;

        for (int j = 0; j < n; j++)
            f[j].clear();

        for (int a,b,j = 0; j < m; j++) {
            //inf >> a >> b;
            cin >> a >> b;

            f[a].push_back(b);
            f[b].push_back(a);
        }
        memset(visited, 0, sizeof(visited));
        printf("%d\n", solve(0));
    }

    return 0;
}