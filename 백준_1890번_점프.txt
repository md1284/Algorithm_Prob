#include <iostream>
#include <vector>
#include <algorithm>
#include <string.h>

using namespace std;

typedef unsigned long long ULL;

int board[101][101];
int n;
ULL cache[101][101];

ULL solve(int y, int x) {
	if(y == n-1 && x == n-1)	return 1;
	
	ULL& ret = cache[y][x];
	if(ret != -1)	return ret;
	
	ret = 0;
	
	if(y + board[y][x] < n)	ret += solve(y+board[y][x], x);
	if(x + board[y][x] < n) ret += solve(y, x+board[y][x]);
	
	return ret;
}

int main() {
	cin >> n;
	memset(cache, -1, sizeof(cache));
	
	for(int i = 0; i<n; i++) {
		for(int j = 0; j<n; j++)
			cin >> board[i][j];
	}
	
	cout << solve(0, 0) << endl;
	
	return 0;
}