#include <stdio.h>
#include <vector>
#include <Windows.h>

using namespace std;

int n, m, k;

long long sum(vector<long long> &tree, int i) {
	long long ans = 0;
	
	while (i > 0) {
		ans += tree[i];
		i -= (i & -i);
	}

	return ans;
}

void update(vector<long long> &tree, int i, long long diff) {
	while (i < tree.size()) {
		tree[i] += diff;
		i += (i & -i);
	}
}


int main(void) {
	scanf("%d %d %d", &n, &m, &k);
	vector<long long> tree(n + 1), arr(n + 1);

	for (int i = 1; i <= n; i++) {
		scanf("%lld", &arr[i]);
		update(tree, i, arr[i]);
	}

	for (int i = 0; i < m + k; i++) {
		int a, b;
		long long c;
		scanf("%d %d %lld", &a, &b, &c);

		if (a == 1) {
			long long diff = c - arr[b];
			arr[b] = c;

			update(tree, b, diff);
		}

		else if (a == 2)
			printf("%lld\n", sum(tree, c) - sum(tree, b - 1));
	}


	system("pause");
	return 0;
}