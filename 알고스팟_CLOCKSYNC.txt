#include <iostream>
#include <algorithm>
#include <fstream>

using namespace std;

const int INF = 987654321;
int c;
int clo[16];
int con[10][6] = {
    {3, 0,1,2},
    {4, 3,7,9,11},
    {4, 4,10,14,15},
    {5, 0,4,5,6,7},
    {5, 6,7,8,10,12},
    {4, 0,2,14,15},
    {3, 3,14,15},
    {5, 4,5,7,14,15},
    {5, 1,2,3,4,5},
    {5, 3,4,5,9,13}
};

bool check() {
    for (int i = 0; i < 16; i++) {
        if (clo[i] != 0)
            return false;
    }
    return true;
}

void rotate(int index) {
    int s = con[index][0];

    for (int i = 1; i <= s; i++) {
        int cur = con[index][i];

        clo[cur] += 3;
        clo[cur] %= 12;
    }
}

int solve(int index, int cnt) {
    if (index == 10 && check() == true)
        return cnt;
    else if (index == 10)
        return INF;

    int ret = INF;
    for (int i = 0; i < 4; i++) {
        if (check() == true)
            ret = min(ret, cnt + i % 4);

        ret = min(ret, solve(index + 1, cnt + i % 4));
        rotate(index);
    }
    return ret;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //fstream inf("prob.txt");
    //inf >> c;
    cin >> c;

    for (int i = 0; i < c; i++) {
        for (int val, j = 0; j < 16; j++) {
            //inf >> val;
            cin >> val;

            clo[j] = val % 12;
        }
        int ret = solve(0, 0);

        if (ret == INF)
            printf("-1\n");
        else
            printf("%d\n", solve(0, 0));
    }

    return 0;
}